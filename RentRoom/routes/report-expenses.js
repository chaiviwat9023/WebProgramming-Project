const express = require("express");
const router = express.Router();
const db = require("../config/database");

// üìå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
router.get("/", (req, res) => {
    const query = `
        SELECT bills.*, rooms.room_id
        FROM bills
        JOIN rooms ON bills.room_id = rooms.room_id
    `;

    console.log("üì• Executing query to fetch all bills:", query);

    db.all(query, (err, rows) => {
        if (err) {
            console.error("Error fetching bills:", err);
            return res.status(500).json({ error: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•" });
        }
        console.log("Bills fetched successfully:", rows);
        res.json(rows);
    });
});

// üìå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏¥‡∏•‡πÉ‡∏´‡∏°‡πà
router.post("/", (req, res) => {

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏´‡∏≤‡∏¢‡πÑ‡∏õ
    const { roomNumber, billingCycle, rent, water, electricity, status } = req.body;
    if (!roomNumber || !billingCycle) {
        console.warn("Missing required fields: roomNumber or billingCycle");
        return res.status(400).json({ message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏ö‡∏ö‡∏¥‡∏•" });
    }

    const rentAmount = parseFloat(rent) || 0;
    const waterAmount = parseFloat(water) || 0;
    const electricityAmount = parseFloat(electricity) || 0;
    const billStatus = status || 'pending';

    const userQuery = "SELECT owner_id FROM rooms WHERE room_id = ?";
    
    db.get(userQuery, [roomNumber], (err, user) => {
        if (err) {
            console.error("Error fetching user:", err);
            return res.status(500).json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", error: err.message });
        }
        
        if (!user) {
            console.warn("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ");
            return res.status(404).json({ message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ" });
        }

        const insertQuery = `
            INSERT INTO bills (user_id, room_id, billing_cycle, rent, water, electricity, status) 
            VALUES (?, ?, ?, ?, ?, ?, ?)
        `;

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ insert
        console.log("Inserting bill with:", {
            user_id: user.owner_id,
            room_id: roomNumber,
            billing_cycle: billingCycle,
            rentAmount,
            waterAmount,
            electricityAmount,
            billStatus
        });

        db.run(insertQuery, [
            user.owner_id, 
            roomNumber,
            billingCycle,
            rentAmount,
            waterAmount,
            electricityAmount,
            billStatus
        ], (err) => {
            if (err) {
                console.error("SQL Insert Error:", err.code, err.message);
                return res.status(500).json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", error: err.message });
            }

            console.log("Inserted bill successfully!");
            res.json({ message: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏¥‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!" });
        });
    });
});

module.exports = router;